name: Making One Bet
on:
  schedule:
    - cron: '0 0 * * *'  # This runs daily at midnight UTC
  workflow_dispatch:  # This allows manual triggering

jobs:
  run_script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install websockets
      
      - name: Run script
        run: python Websocket.py
      
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: script-output
          path: output.txt
        if: always()
      
      - name: Read output file
        id: read_output
        run: |
          if [ -f output.txt ]; then
            content=$(cat output.txt)
            echo "OUTPUT_CONTENT<<EOF" >> $GITHUB_ENV
            echo "$content" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "OUTPUT_CONTENT=No output.txt file found." >> $GITHUB_ENV
          fi
        shell: bash

      - name: Post to Slack
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          WORKFLOW_NAME: ${{ github.workflow }}
          JOB_STATUS: ${{ job.status }}
          EVENT_TYPE: ${{ github.event_name == 'workflow_dispatch' && 'Manually triggered' || 'Scheduled run' }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Workflow:* ${{ env.WORKFLOW_NAME }}\n*Status:* ${{ env.JOB_STATUS }}\n*Event:* ${{ env.EVENT_TYPE }}\n*Commit:* ${{ env.COMMIT_MESSAGE }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Output:*\n```${{ env.OUTPUT_CONTENT }}```"
                  }
                }
              ]
            }
        if: always()
